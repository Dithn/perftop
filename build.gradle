buildscript {

    ext {
        es_version = System.getProperty("es.version", "6.5.5")
    }
    // This isn't applying from repositories.gradle so repeating it here
    repositories {

        //TODO: modify the order of evaluation, once we have artifacts in mavenCentral.
        maven {
            name = "internal-snapshots"
            url = "s3://open-es/snapshots"
            authentication {
                awsIm(AwsImAuthentication) // load from EC2 role or env var
            }
        }
        maven {
            name = "internal-releases"
            url = "s3://open-es/releases"
            authentication {
                awsIm(AwsImAuthentication) // load from EC2 role or env var
            }
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.openes.gradle:build-tools:${es_version}"
    }
}

plugins {
    id "java"
    id "com.moowork.node" version "1.2.0"
}

node {
    download = true
}

allprojects {
    group = "org.openes.plugin"
    version = "1.0"
    boolean snapshot = "true".equals(System.getProperty("build.snapshot", "true"))
    if (snapshot) {
        // we update the version property to reflect if we are building a snapshot or a release build
        // we write this back out below to load it in the Build.java which will be shown in rest main action
        // to indicate this being a snapshot build or a release build.
        version += "-SNAPSHOT"
    }
}


repositories {
    mavenCentral()
}

apply plugin: 'elasticsearch.esplugin'

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
}
test {
    enabled = false
}
licenseHeaders.enabled = false

// We are excluding plugin descriptor for ESTop
// The info here could be random
esplugin {
    name 'es-top'
    description 'ESTop'
    classname 'com.amazon.opendistro.performanceanalyzer.PerformanceAnalyzerApp'
    version "${es_version}"
    publishArtifact true
}


bundlePlugin {
    exclude "es-top*.jar"
    exclude "plugin-descriptor.properties"
    from ("./") {
        include "es-top-linux"
        include "es-top-macos"
        include "es-top-win.exe"
    }
    from ("dashboards/") {
        into "dashboards/"
        include "*.json"
    }
}

gradle.startParameter.excludedTaskNames += ["integTestCluster#wait", "integTestRunner"]
